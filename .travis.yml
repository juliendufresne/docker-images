sudo: required

language: bash

git:
    depth: 3
    quiet: true

services:
    - docker

env:
    global:
      - DOCKER_ORGZ=juliendufresne LATEST=false PHP_VERS=""
    matrix:
       - LIB=php               LIB_VERS=7.1
       - LIB=php               LIB_VERS=7.2               LATEST=true
       - LIB=php-cs-fixer      LIB_VERS=2.13 PHP_VERS=7.1
       - LIB=php-cs-fixer      LIB_VERS=2.13 PHP_VERS=7.2 LATEST=true
       - LIB=php-parallel-lint LIB_VERS=1.0  PHP_VERS=7.1
       - LIB=php-parallel-lint LIB_VERS=1.0  PHP_VERS=7.2 LATEST=true
       - LIB=phpmetrics        LIB_VERS=2.3  PHP_VERS=7.1
       - LIB=phpmetrics        LIB_VERS=2.3  PHP_VERS=7.2 LATEST=true
       - LIB=phpstan           LIB_VERS=0.10 PHP_VERS=7.1
       - LIB=phpstan           LIB_VERS=0.10 PHP_VERS=7.2 LATEST=true
       - LIB=prettier          LIB_VERS=1.14              LATEST=true
       - LIB=speccy            LIB_VERS=0.7               LATEST=true
       - LIB=textlint          LIB_VERS=11.0              LATEST=true

before_install:
    - export DOCKER_IMAGE="$DOCKER_ORGZ/$LIB:$(./build.sh --travis --show-tag --php-version="$PHP_VERS" "$DOCKER_ORGZ" "$LIB" "$LIB_VERS")"
    - docker pull $DOCKER_IMAGE || true

install:
    - ./build.sh --travis --php-version="$PHP_VERS" "$DOCKER_ORGZ" "$LIB" "$LIB_VERS"

script:
    # check shell file format
    - find . \( -name "*.sh" -o -name "Dockerfile" \) | xargs shellcheck
    - docker images
    # Lib version
    - (set -x; docker run --rm --volume $PWD:/app $DOCKER_IMAGE --version)
    # Activate xdebug
    - |
        [[ "$LIB" != php* ]] || (set -x; docker run --rm -e XDEBUG_ENABLED=1 --volume $PWD:/app --user=$(id -u):$(id -g) $DOCKER_IMAGE php -m) | grep -q "xdebug"
    - |
        [[ "$LIB" != php* ]] || (set -x; docker run --rm -e XDEBUG_ENABLED=1 --volume $PWD:/app $DOCKER_IMAGE php -m | grep -q "xdebug")
    # Creating file
    - |
        if [[ "$LIB" == php* ]]; then
            docker run --rm --volume $PWD:/app --user=$(id -u):$(id -g) $DOCKER_IMAGE touch test-as-user
            docker run --rm --volume $PWD:/app $DOCKER_IMAGE touch test-as-root
            ls -al test-as-*
            [[ $(stat -c '%u' test-as-user) -eq "$(id -u)" ]]
            [[ $(stat -c '%u' test-as-root) -eq "0" ]]
        fi

after_success:
    - if $LATEST; then
        (set -x; docker tag $DOCKER_IMAGE $DOCKER_ORGZ/$LIB:latest)
      fi
    - |
        if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_LOGIN" --password-stdin
            docker push $DOCKER_ORGZ/$LIB
        else
            echo "not in branch master - tag will not be pushed"
            echo "docker push $DOCKER_ORGZ/$LIB"
        fi

notifications:
    email:
        on_failure: change
        on_success: never
